// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
uuid        String      @id @default(uuid())

sub       String
email     String        @unique
name      String
studentId String  
phoneNumber String?

posts     Post[]        @relation("UserPosts")
subscriptions   UserSubscription[]  
}

model Post{
uuid      String  @id @default(uuid())

author    User    @relation("UserPosts", fields:[authorId], references:[uuid])
authorId  String

title     String
content   String
category  Category?   @relation(fields:[categoryId], references: [id])
categoryId  Int

deletedAt DateTime?
isDeleted Boolean @default(false)

createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
}

model Category{
id    Int    @id @default(autoincrement())
name  String  @unique

deletedAt DateTime?
isDeleted Boolean  @default(false)

posts Post[]      
users UserSubscription[]  
}

model UserSubscription {
  userId      String
  categoryId  Int

  user        User     @relation(fields: [userId], references: [uuid])
  category    Category @relation(fields: [categoryId], references: [id])

  @@id([userId, categoryId])
}